#ifndef HEADER_HPP_INCLUDED
#define HEADER_HPP_INCLUDED

const uint8_t SOI[] = {0xff, 0xd8};
const uint16_t szSOI = sizeof(SOI);

const uint8_t DQT_Y[] = {0xff, 0xdb, 0x00, 0x43, 0x00};
const uint16_t szDQT_Y = sizeof(DQT_Y);

const uint8_t DQT_UV[] = {0xff, 0xdb, 0x00, 0x43, 0x01};
const uint16_t szDQT_UV = sizeof(DQT_UV);

const uint8_t SOF_A[] = {0xff, 0xc0, 0x00, 0x11, 0x08};
const uint16_t szSOF_A = sizeof(SOF_A);

const uint8_t SOF_B[] = {0x03, 0x01, 0x22, 0x00, 0x02, 0x11, 0x01, 0x03, 0x11, 0x01};
const uint16_t szSOF_B = sizeof(SOF_B);

const uint8_t DHT_Y_DC[] = {0xff, 0xc4, 0x00, 0x1f, 0x00};
const uint16_t szDHT_Y_DC = sizeof(DHT_Y_DC);

const uint8_t DHT_Y_AC[] = {0xff, 0xc4, 0x00, 0xb5, 0x10};
const uint16_t szDHT_Y_AC = sizeof(DHT_Y_AC);

const uint8_t DHT_UV_DC[] = {0xff, 0xc4, 0x00, 0x1f, 0x01};
const uint16_t szDHT_UV_DC = sizeof(DHT_UV_DC);

const uint8_t DHT_UV_AC[] = {0xff, 0xc4, 0x00, 0xb5, 0x11};
const uint16_t szDHT_UV_AC = sizeof(DHT_UV_AC);

const uint8_t SOS_Y[] = {0xff, 0xda, 0x00, 0x08, 0x01, 0x01, 0x00, 0x00, 0x3f, 0x00};
const uint16_t szSOS_Y = sizeof(SOS_Y);

const uint8_t SOS_U[] = {0xff, 0xda, 0x00, 0x08, 0x01, 0x02, 0x11, 0x00, 0x3f, 0x00};
const uint16_t szSOS_U = sizeof(SOS_U);

const uint8_t SOS_V[] = {0xff, 0xda, 0x00, 0x08, 0x01, 0x03, 0x11, 0x00, 0x3f, 0x00};
const uint16_t szSOS_V = sizeof(SOS_V);

const uint8_t EOI[] = {0xff, 0xd9};
const uint16_t szEOI = sizeof(EOI);

const uint8_t EXIF[] = {
    0xFF, 0xE1, 0x01, 0x04, 0x45, 0x78, 0x69, 0x66, 0x00, 0x00, 0x4D, 0x4D, 0x00, 0x2A, 0x00, 0x00,
    0x00, 0x08, 0x00, 0x05, 0x01, 0x1A, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4A,
    0x01, 0x1B, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x52, 0x01, 0x28, 0x00, 0x03,
    0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x02, 0x13, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x01, 0x00, 0x00, 0x87, 0x69, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5A,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48,
    0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x82, 0x9A, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0x00, 0xC0, 0x90, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x30, 0x32, 0x33, 0x30, 0x90, 0x03,
    0x00, 0x02, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0xC8, 0x91, 0x01, 0x00, 0x07, 0x00, 0x00,
    0x00, 0x04, 0x01, 0x02, 0x03, 0x00, 0x92, 0x90, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x33, 0x30,
    0x30, 0x00, 0xA0, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x04, 0x30, 0x31, 0x30, 0x30, 0xA0, 0x01,
    0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0xA4, 0x31, 0x00, 0x02, 0x00, 0x00,
    0x00, 0x1F, 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
    0xC3, 0x50, 0x30, 0x30, 0x30, 0x31, 0x3A, 0x30, 0x31, 0x3A, 0x30, 0x31, 0x20, 0x30, 0x30, 0x3A,
    0x30, 0x30, 0x3A, 0x30, 0x30, 0x00, 0x32, 0x35, 0x35, 0x2D, 0x31, 0x38, 0x34, 0x34, 0x36, 0x37,
    0x34, 0x34, 0x30, 0x37, 0x33, 0x37, 0x30, 0x39, 0x35, 0x35, 0x31, 0x36, 0x31, 0x35, 0x2D, 0x36,
    0x35, 0x35, 0x33, 0x35, 0x00, 0x00
};
const uint16_t szEXIF = sizeof(EXIF);
const uint16_t EXIFDATETIME_pos = 0xD2;
const uint16_t EXIFDATETIME_len = 0x14;
const uint16_t EXIFSUBSEC_pos = 0x9E;
const uint16_t EXIFSUBSEC_len = 0x04;
const uint16_t EXIFID_pos = 0xE6;
const uint16_t EXIFID_len = 0x1F;
const uint16_t EXIFEXP_pos = 0xCA;
const uint16_t EXIFEXP_len = 0x08;

//tables

const uint8_t QTABLES_Y[] = {
	// 50%
	16, 11, 12, 14, 12, 10, 16, 14,
	13, 14, 18, 17, 16, 19, 24, 40,
	26, 24, 22, 22, 24, 49, 35, 37,
	29, 40, 58, 51, 61, 60, 57, 51,
	56, 55, 64, 72, 92, 78, 64, 68,
	87, 69, 55, 56, 80, 109, 81, 87,
	95, 98, 103, 104, 103, 62, 77, 113,
	121, 112, 100, 120, 92, 101, 103, 99,
	// 80%
	6, 4, 5, 6, 5, 4, 6, 6,
	5, 6, 7, 7, 6, 8, 10, 16,
	10, 10, 9, 9, 10, 20, 14, 15,
	12, 16, 23, 20, 24, 24, 23, 20,
	22, 22, 26, 29, 37, 31, 26, 27,
	35, 28, 22, 22, 32, 44, 32, 35,
	38, 39, 41, 42, 41, 25, 31, 45,
	48, 45, 40, 48, 37, 40, 41, 40};

const uint8_t QTABLES_UV[] = {
	// 50%
	17, 18, 18, 24, 21, 24, 47, 26,
	26, 47, 99, 66, 56, 66, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99,
	// 80%
	7, 7, 7, 10, 8, 10, 19, 10,
	10, 19, 40, 26, 22, 26, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40 };

const uint16_t szQTABLE = 64;

const uint8_t Y_DC_TABLE[] = {
    // number of codes for DC
	0x00,0x01,0x05,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	// code's value
	0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B};
const uint16_t szY_DC_TABLE = sizeof(Y_DC_TABLE);

const uint8_t Y_AC_TABLE[] = {
    // number of codes for AC
    0x00,0x02,0x01,0x03,0x03,0x02,0x04,0x03,0x05,0x05,0x04,0x04,0x00,0x00,0x01,0x7D,
	// code's value
	0x01,0x02,0x03,0x00,0x04,0x11,0x05,0x12,0x21,0x31,0x41,0x06,0x13,0x51,0x61,0x07,
	0x22,0x71,0x14,0x32,0x81,0x91,0xA1,0x08,0x23,0x42,0xB1,0xC1,0x15,0x52,0xD1,0xF0,
	0x24,0x33,0x62,0x72,0x82,0x09,0x0A,0x16,0x17,0x18,0x19,0x1A,0x25,0x26,0x27,0x28,
	0x29,0x2A,0x34,0x35,0x36,0x37,0x38,0x39,0x3A,0x43,0x44,0x45,0x46,0x47,0x48,0x49,
	0x4A,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5A,0x63,0x64,0x65,0x66,0x67,0x68,0x69,
	0x6A,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x83,0x84,0x85,0x86,0x87,0x88,0x89,
	0x8A,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,
	0xA8,0xA9,0xAA,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xB9,0xBA,0xC2,0xC3,0xC4,0xC5,
	0xC6,0xC7,0xC8,0xC9,0xCA,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xE1,0xE2,
	0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,
	0xF9,0xFA};
const uint16_t szY_AC_TABLE = sizeof(Y_AC_TABLE);

const uint8_t UV_DC_TABLE[] = {
    // number of codes for DC
	0x00,0x03,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,
	// code's value
	0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,0x0A,0x0B};
const uint16_t szUV_DC_TABLE = sizeof(UV_DC_TABLE);

const uint8_t UV_AC_TABLE[] = {
    // number of codes for AC
	0x00,0x02,0x01,0x02,0x04,0x04,0x03,0x04,0x07,0x05,0x04,0x04,0x00,0x01,0x02,0x77,
	// code's value
	0x00,0x01,0x02,0x03,0x11,0x04,0x05,0x21,0x31,0x06,0x12,0x41,0x51,0x07,0x61,0x71,
	0x13,0x22,0x32,0x81,0x08,0x14,0x42,0x91,0xa1,0xb1,0xc1,0x09,0x23,0x33,0x52,0xF0,
	0x15,0x62,0x72,0xd1,0x0a,0x16,0x24,0x34,0xe1,0x25,0xf1,0x17,0x18,0x19,0x1a,0x26,
	0x27,0x28,0x29,0x2a,0x35,0x36,0x37,0x38,0x39,0x3a,0x43,0x44,0x45,0x46,0x47,0x48,
	0x49,0x4a,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5a,0x63,0x64,0x65,0x66,0x67,0x68,
	0x69,0x6a,0x73,0x74,0x75,0x76,0x77,0x78,0x79,0x7a,0x82,0x83,0x84,0x85,0x86,0x87,
	0x88,0x89,0x8a,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9a,0xA2,0xA3,0xA4,0xA5,
	0xA6,0xA7,0xA8,0xa9,0xaa,0xB2,0xB3,0xB4,0xB5,0xB6,0xB7,0xB8,0xb9,0xba,0xC2,0xC3,
	0xC4,0xC5,0xC6,0xC7,0xC8,0xc9,0xca,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xd9,0xda,
	0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xea,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,
	0xF9,0xFA};
const uint16_t szUV_AC_TABLE = sizeof(UV_AC_TABLE);

#endif // HEADER_HPP_INCLUDED
